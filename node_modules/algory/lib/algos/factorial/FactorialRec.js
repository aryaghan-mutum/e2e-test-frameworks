"use strict";
/**
 * Algory
 *
 * Copyright (c) 2020. Anurag Muthyam <anu.drumcoder@gmail.com>
 * https://github.com/aryaghan-mutum
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.factRec = void 0;
const NumericalComputationPredicates_1 = require("../NumericalComputationPredicates");
const NumericalComputation_1 = require("../NumericalComputation");
const curry = require('curry');
/**
 * @remarks Factorial: Recursive Procedure with Recursive Process
 * F(n) => (* n (f (- n 1))
 *
 * @param n - A factorial index
 * @returns A Factorial number of a specific index using Recursive process
 */
exports.factRec = curry((n) => {
    n = Math.round(n);
    if (NumericalComputationPredicates_1.isZero(n) || NumericalComputationPredicates_1.isOne(n))
        return 1;
    else if (n < 0)
        throw new Error("Factorial for negative numbers do not exist");
    else
        return n * exports.factRec(NumericalComputation_1.sub1(n));
});
//# sourceMappingURL=FactorialRec.js.map