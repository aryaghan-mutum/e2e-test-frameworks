"use strict";
/**
 * Algory
 *
 * Copyright (c) 2020. Anurag Muthyam <anu.drumcoder@gmail.com>
 * https://github.com/aryaghan-mutum
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.factIter = void 0;
const curry = require('curry');
const err = require('../../TypeViolation');
/**
 * @remarks Factorial: Recursive Procedure with Iterative Process
 *
 * @param n - A factorial index
 * @returns A Factorial number of a specific index using Recursive process
 */
exports.factIter = curry((n) => {
    n = Math.round(n);
    err.numberTypeViolationError(n);
    if (n < 0)
        throw new Error("Factorial for negative numbers do not exist");
    const fact = (product, counter) => {
        if (counter > n) {
            return product;
        }
        else {
            return fact((product * counter), (counter + 1));
        }
    };
    return fact(1, 1);
});
//# sourceMappingURL=FactorialIter.js.map