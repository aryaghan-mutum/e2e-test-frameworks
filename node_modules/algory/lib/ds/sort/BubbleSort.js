"use strict";
/**
 * Algory
 *
 * Copyright (c) Anurag Muthyam <anu.drumcoder@gmail.com>
 * https://github.com/aryaghan-mutum
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.bubbleSortImper = void 0;
const Swap_1 = require("./Swap");
const NumericalComputation_1 = require("../../algos/NumericalComputation");
const curry = require('curry');
/**
 * @remarks Bubble Sort
 *
 */
exports.bubbleSortImper = curry(
/**
 * @param arr - An unsorted array of numbers
 * @returns Sorted array of numbers
 */
(arr) => {
    // if the array is null or undefined then return null
    if (arr === undefined || arr === null)
        return null;
    // One by one move boundary of unsorted subarray
    for (let i = 1; i <= arr.length; i++) {
        for (let j = 0; j < arr.length - 1; j++) {
            // if the elem in first index is greater than elem in second index the swap
            if (arr[j] > arr[NumericalComputation_1.add1(j)]) {
                Swap_1.swap(arr, j, NumericalComputation_1.add1(j));
            }
        }
    }
    return arr;
});
//# sourceMappingURL=BubbleSort.js.map